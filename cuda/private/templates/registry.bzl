# map short component name to consumable targets
REGISTRY = {
    "cudart": ["cudart_all_files", "cudart_license", "cudart_headers", "cuda", "cuda_runtime", "cuda_runtime_static"],
    "nvcc": ["nvcc_all_files", "nvcc_license", "nvcc_headers", "compiler_root", "compiler_deps", "nvptxcompiler"],
    "cccl": ["cccl_all_files", "cccl_license", "cccl_headers", "cub", "thrust"],
    "cublas": ["cublas_all_files", "cublas_license", "cublas_headers", "cublas"],
    "cufft": ["cufft_all_files", "cufft_license", "cufft_headers", "cufft", "cufft_static"],
    "cufile": [],
    "cupti": ["cupti_all_files", "cupti_license", "cupti_headers", "cupti", "nvperf_host", "nvperf_target"],
    "curand": ["curand_all_files", "curand_license", "curand_headers", "curand"],
    "cusolver": ["cusolver_all_files", "cusolver_license", "cusolver_headers", "cusolver"],
    "cusparse": ["cusparse_all_files", "cusparse_license", "cusparse_headers", "cusparse"],
    "npp": ["npp_all_files", "npp_license", "npp_headers", "nppc", "nppi", "nppial", "nppicc", "nppidei", "nppif", "nppig", "nppim", "nppist", "nppisu", "nppitc", "npps"],
    "nvidia_fs": [],
    "nvjitlink": ["nvjitlink_all_files", "nvjitlink_license", "nvjitlink_headers", "nvjitlink", "nvjitlink_static"],
    "nvjpeg": ["nvjpeg_all_files", "nvjpeg_license", "nvjpeg_headers", "nvjpeg", "nvjpeg_static"],
    "nvml": ["nvml_all_files", "nvml_license", "nvml_headers", "nvml"],
    "nvprof": [],
    "nvrtc": ["nvrtc_all_files", "nvrtc_license", "nvrtc_headers", "nvrtc"],
    "nvtx": ["nvtx_all_files", "nvtx_license", "nvtx_headers", "nvtx"],
}

# map short component name to full component name
FULL_COMPONENT_NAME = {
    "cudart": "cuda_cudart",
    "nvcc": "cuda_nvcc",
    "cccl": "cuda_cccl",
    "cublas": "libcublas",
    "cufft": "libcufft",
    "cufile": "libcufile",
    "cupti": "libcupti",
    "curand": "libcurand",
    "cusolver": "libcusolver",
    "cusparse": "libcusparse",
    "npp": "libnpp",
    "nvidia_fs": "nvidia_fs",
    "nvjitlink": "libnvjitlink",
    "nvjpeg": "libnvjpeg",
    "nvml": "cuda_nvml_dev",
    "nvrtc": "cuda_nvrtc",
    "nvtx": "cuda_nvtx",
}
